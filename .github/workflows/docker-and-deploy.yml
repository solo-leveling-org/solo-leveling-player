name: Docker build, Push and Deploy to Kubernetes

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type: jvm or native'
        required: true
        default: 'jvm'
        type: choice
        options:
          - jvm
          - native
      replicas:
        description: 'Number of replicas (pods) to deploy'
        required: true
        default: 1
        type: number

jobs:
  docker-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate settings.xml
        run: |
          cat <<EOF > ./settings.xml
          <?xml version="1.0" encoding="UTF-8"?>
          <settings>
            <servers>
              <server>
                <id>github</id>
                <username>${GITHUB_USER}</username>
                <password>${PACKAGES_TOKEN}</password>
              </server>
            </servers>
          </settings>
        env:
          GITHUB_USER: ${{ secrets.GITHUB_USER }}
          PACKAGES_TOKEN: ${{ secrets.PACKAGES_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Determine image tag
        id: image-tag
        run: |
          COMMIT_SHA="${{ github.sha }}"
          if [ "${{ inputs.build_type }}" = "native" ]; then
            TAG="${COMMIT_SHA}-native"
          else
            TAG="${COMMIT_SHA}"
          fi
          echo "IMAGE_TAG=$TAG" >> $GITHUB_ENV
          echo "FULL_IMAGE=${{ secrets.DOCKERHUB_USER }}/solo-leveling-player:$TAG" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.${{ inputs.build_type }}
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USER }}/solo-leveling-player:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKERHUB_USER }}/solo-leveling-player:latest

      - name: Install kubectl
        uses: azure/setup-kubectl@v4

      - name: Set environment variables for deployment
        run: |
          echo "DEPLOY_IMAGE=${{ secrets.DOCKERHUB_USER }}/solo-leveling-player:${{ env.IMAGE_TAG }}" >> $GITHUB_ENV
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> $GITHUB_ENV
          echo "REPLICAS=${{ inputs.replicas }}" >> $GITHUB_ENV

      - name: Install gettext for envsubst
        run: |
          sudo apt-get update && sudo apt-get install -y gettext-base

      - name: Generate final deployment.yml with env vars
        run: |
          envsubst < k8s/deployment.yml > k8s/deployment-rendered.yml
          cat k8s/deployment-rendered.yml

      - name: Setup kubeconfig
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          mkdir -p ~/.kube
          echo "$KUBECONFIG" > ~/.kube/config

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s/deployment-rendered.yml
          kubectl apply -f k8s/service.yml

      - name: Wait for deployment rollout
        run: |
          kubectl rollout status deployment/solo-leveling-player --timeout=120s

      - name: Clean up temporary files (security)
        run: |
          rm -f settings.xml
          rm -f k8s/deployment-rendered.yml